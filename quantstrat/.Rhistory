source('bee.r')
test = PortfReturns(acct)
test
test$curve = test+1
head(test)
tail(test)
source('~/clones/blog/plotEquityCurve.r')
args(plotEquityCurve)
plotEquityCurve
test = PortfReturns(acct)
plotEquityCurve(test)
require(PerformanceAnalytics)
plotEquityCurve(test)
?PortfReturns
test
head(test)
foo = test[-c(1:34),]
head(foo)
foo = test[-c(1:55),]
head(foo)
plotEquityCurve(foo)
plotEquityCurve
foo$eq = NA
for( i in 1:nrow(foo)){
 foo$eq[i,] =  apply(foo[,1][1:i], 2, Return.cumulative)}
}
foo
head(foo)
foo$eq = NA
head(foo)
plotEquityCurve
for (i in 1:nrow(foo))
foo$eq[i,] = apply(foo[,1][1:i], 2, Return.cumulative)
tail(foo)
foo$stock = foo$eq + 1
foo$bull = ifelse(SMA(foo$stock, n=10) > SMA(foo$stock, n=30), 1, 0)
tail(foo)
nrow(foo)
sum(foo$bull)
sum(na.omit(foo$bull))
nrow(na.omit(foo))
sum(na.omit(foo$bull))/nrow(na.omit(foo))
tail(foo$bull)
q()
tail(foo$bull)
require(quantstrat)
tail(foo$bull)
head(foo)
source('../plotEquityCurve.r')
plotEquityCurve(foo$eq)
require(PerformanceAnalytics)
plotEquityCurve(foo$eq)
plotEquityCurve
source('~/clones/blog/plotter.r')
plotter
plotter(foo$eq)
plotter(foo$eq, lastprice=0)
plotter(foo$eq)
system('open 1.pdf')
plotter(foo$eq, lastprice=1)
args(plotter)
plotter(foo$eq, lastprice=1, min=0)
system('open 1.pdf')
max(foo$eq)
min(foo$eq)
savehistory()
q()
require(quantstrat)
c
clear()
ls()
head(test)
tail(test)
dens = density(na.omit(test))
plot(dens)
dev.off()
sourc('plotter.r')
source('plotter.r')
plotter
plotter(test)
system('open 1.pdf')
source('beePlot.r')
beePlotter(test)
source('beePlot.r')
beePlotter(test)
source('beePlot.r')
beePlotter(test)
q()
require(quantstrat)
source('beePlot.r')
beePlot(test)
q()
require(PerformanceAnalytics)
require(quantstrat)
head(test)
?chart.Histogram
chart.Histogram(test)
png()
chart.Histogram(test)
dev.off()
dev.off()
chart.Histogram(test, methods='add.density')
?chart.Histogram
chart.Histogram(test, methods='add.density', lwd=1)
chart.Histogram(test, methods='add.density', lwd=.8)
chart.Histogram(test, methods='add.density', lwd=.8, las=1)
chart.Histogram(test, methods='add.density', lwd=.8)
?chart.Histogram
chart.Histogram(test, methods=c('add.density', 'add.risk'), lwd=.8)
chart.Histogram(test, methods=c('add.density', 'add.cauchy'), lwd=.8)
foo = na.omit(test)
chart.Histogram(foo, methods=c('add.density', 'add.cauchy'), lwd=.8)
?chart.Histogram
chart.Histogram(foo, methods=c('add.density', 'add.rug'), lwd=.8)
chart.Histogram(foo, methods=c('add.density', 'add.rug', 'add.sst'), lwd=.8)
chart.Histogram(foo, methods=c('add.density', 'add.rug', 'add.qqplot'), lwd=.8)
?chart.Histogram
chart.Histogram(foo, methods=c('add.density'), lwd=.8, colorset=ifelse(foo > 0, 'blue', 'green'))
chart.Histogram(foo, methods=c('add.density'), colorset=ifelse(foo > 0, 'blue', 'green'))
?chart.Histogram
dev.off()
ls()
i
rm(i)
!('ls')
source('foo.r')
source('funstats.r')
funstats(test)
source('funstats.r')
funstats(test)
source('funstats.r')
funstats(test)
dev.off()
source('funstats.r')
funstats(test)
source('funstats.r')
funstats(test)
?sharpeRatio
??sharpeRatio
?SharpeRatio.annualized(test)
SharpeRatio.annualized(test)
baz = SharpeRatio.annualized(test)
baz
class(baz)
baz[1,1]
funstats(test)
source('funstats.r')
funstats(test)
source('funstats.r')
funstats(test)
dev.off()
fg vi
source('funstats.r')
funstats(test)
head(test)
SharpeRatio.Annualized
SharpeRatio.annualized
funstats(foo)
head(foo)
foo = na.omit(test)
funstats(foo)
funstats(test)
head(foo)
foo = foo[-c(1:33)]
head(foo)
foo = foo[-c(1:10)]
head(foo)
foo = foo[-c(1:2)]
head(foo)
funstats(test)
funstats(test)
funstats(foo)
foo = na.omit(test)
source('funstats.r')
funstats(foo)
q()
