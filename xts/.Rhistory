getSymbols('^GSPC')
G <- monthlyReturn(Cl(GSPC))
G$eq <- NA
for(i in 1:nrow(G))  G$eq[i,] <- apply(G$monthly.returns[1:i], 2, Return.cumulative)
head(G)
plot(G$eq +1)
require(quantmstrat)
require(quantstrat)
require(PerformanceAnalytics)
ls()
getSymbols('^GSPC', from='1900-01-01')
G = monthlyReturn(Cl(GSPC))
head(G)
G$eq <- NA
for(i in 1:nrow(G)) G$eq[i,] = apply(G$monthly.returns, 2, Return.cumulative)
plot(G$eq +1)
dev.off()
head(G)
for(i in 1:nrow(G))  G$eq[i,] <- apply(G$monthly.returns[1:i], 2, Return.cumulative)
plot(G$eq +1)
MAY <- G[.indexmon(G) == 4]
head(MAY)
MAY$eq = NA
head(MAY)
for(i in 1:nrow(MAY))  MAY$eq[i,] <- apply(MAY$monthly.returns[1:i], 2, Return.cumulative)
plot(MAY$eq +1)
JAN <- G[.indexmon(G) == 0]
for(i in 1:nrow(JAN))  JAN$eq[i,] <- apply(JAN$monthly.returns[1:i], 2, Return.cumulative)
plot(JAN$eq +1)
plot(JAN$eq +1, las=1, main='Only invest in the SPX for \n the month of January')
Return.cumulative(MAY$monthly.returns)
Return.cumulative(JAN$monthly.returns)
Return.annualized(JAN$monthly.returns)
png('Jan_effect.png')
plot(JAN$eq +1, las=1, main='Only invest in the SPX for \n the month of January')
dev.off()
dev.off()
q()
require(quantstrat)
require(PerformanceAnalytics)
Return.annualized(JAN$monthly.returns)
chart.Cumulative.Return
chart.CumulativeReturn
??chart.CumulativeReturn
??CumulativeReturn
??chart.CumulativeReturn
chart.CumulativeReturn
??chart.CumulativeReturn
chart.RollingPerformance(G)
chart.RollingPerformance(JAN)
chart.SnailTrail(JAN)
dev.off()
for(i in 1:nrow(JAN))  JAN$eq[i,] <- apply(JAN$monthly.returns[1:i], 2, Return.cumulative)
for(i in 1:nrow(JAN))  JAN$eq[i,] <- apply(JAN[,1][1:i], 2, Return.cumulative)
plot(JAN$eq + 1)
dev.off()
for(i in 1:nrow(JAN))  JAN$eq[i,] <- apply(JAN[,1][1:i], 2, Return.cumulative)
source('plotEquityCurve.r')
plotEquityCurve(JAN)
q()
require(quantstrat)
require(PerformanceAnalytics)
ls()
plotEquityCurve(MAY)
head(G)
APR = G[.indexmon(G) == 3]
plotEquityCurve(APR)
Return.annualized(APR)
G = monthlyReturn(Cl(GSPC))
APR = G[.indexmon(G) == 3]
Return.annualized(APR)
plotEquityCurve(APR)
plotEquityCurve(APR, main=x)
plotEquityCurve(APR, main='')
plotEquityCurve(APR)
source('plotEquityCurve.r')
plotEquityCurve(APR)
deparse(substitute(APR))
source('plotEquityCurve.r')
plotEquityCurve(APR)
source('plotEquityCurve.r')
plotEquityCurve(APR)
source('plotEquityCurve.r')
plotEquityCurve(APR)
MAR = G[.indexmon(G) == 2]
plotEquityCurve(MAR)
OCT = G[.indexmon(G) == 9]
plotEquityCurve(OCT)
JAN = G[.indexmon(G) == 1]
JUN = G[.indexmon(G) == 5]
JUL = G[.indexmon(G) == 6]
AUG = G[.indexmon(G) == 7]
SEP = G[.indexmon(G) == 8]
NOV = G[.indexmon(G) == 10]
DEC = G[.indexmon(G) == 11]
ls()
dev.off()
 par( mfrow = c( 3, 4 ) 
)
plotEquityCurve(JAN)
plotEquityCurve(FEB)
plotEquityCurve(MAR)
plotEquityCurve(APR)
plotEquityCurve(MAY)
plotEquityCurve(JUN)
plotEquityCurve(JUL)
plotEquityCurve(AUG)
plotEquityCurve(SEP)
plotEquityCurve(OCT)
plotEquityCurve(NOV)
plotEquityCurve(DEC)
plotEquityCurve(DEC)
dev.off()
FEB = G[.indexmon(G) == 1]
source('plotEquityCurve.r')
plotEquityCurve(DEC)
dev.off()
 par( mfrow = c( 3, 4 ))
plotEquityCurve(JAN)
plotEquityCurve(FEB)
plotEquityCurve(MAR)
plotEquityCurve(APR)
plotEquityCurve(MAY)
plotEquityCurve(JUM)
plotEquityCurve(JUN)
plotEquityCurve(JUL)
plotEquityCurve(AUG)
plotEquityCurve(SEP)
plotEquityCurve(OCT)
plotEquityCurve(NOV)
plotEquityCurve(DEC)
dev.off()
png('holdForMonth.png')
 par( mfrow = c( 3, 4 ))
plotEquityCurve(JAN)
plotEquityCurve(FEB)
plotEquityCurve(MAR)
plotEquityCurve(APR)
plotEquityCurve(MAY)
plotEquityCurve(JUN)
plotEquityCurve(JUL)
plotEquityCurve(AUG)
plotEquityCurve(SEP)
plotEquityCurve(OCT)
plotEquityCurve(NOV)
plotEquityCurve(DEC)
dev.off()
system('open holdForMonth.png')
q()
ls()
clear()
test <- c(.009., -.0123, -0.0232, .082)
test <- c(.009, -.0123, -0.0232, .082)
test
foo = zoo(test)
require(quantmod)
foo = zoo(test)
foo
t(foo)
foo
test <- zoo(.009, -.0123, -0.0232, .082)
clear()
test <- zoo(c(.009, -.0123, -0.0232, .082))
test
require(PerformanceAnalytics)
Return.cumulative(test)
clear()
foo = sample(test)
foo
?sample
foo = sample(test, 3)
foo
foo = sample(test, 4)
foo
foo = sample(test, 4)
foo
?sample
foo = sample(test, replace=T)
test <- c(.009, -.0123, -0.0232, .082)
foo = sample(test, replace=T)
foo
foo = sample(test, replace=T)
foo
Return.cumulative(foo)
foo = sample(test, replace=T)
Return.cumulative(foo)
foo = sample(test, replace=T)
Return.cumulative(foo)
foo = sample(test, replace=T)
Return.cumulative(foo)
foo = sample(test, replace=T)
Return.cumulative(foo)
foo = sample(test, replace=T)
Return.cumulative(foo)
foo
?montecarlo
??montecarlo
?resample
?sample
 x <- 1:12
     # a random permutation
     sample(x)
     # bootstrap resampling -- only if length(x) > 1 !
     sample(x, replace=TRUE)
sample(test)
sample(test)
foo = sample(test)
boo = sample(foo)
too = sample(boo)
you = sample(too)
foo
boo
too
you
Return.cumulative(foo
)
Return.cumulative(boo)
Return.cumulative(foo)
Return.cumulative(too)
Return.cumulative(you)
you
Return.cumulative(you)
too
Return.cumulative(too)
Return.cumulative(sample(too))
plotEquityCurve(foo)
plotEquityCurve(zoo(foo))
foo
clear()
foo
as.matrix(foo)
foo = as.matrix(foo)
foo
plotEquityCurve(foo)
foo
foo = as.data.frame(foo)
foo
plotEquityCurve(foo)
foo
foo$eq = NA
foo
plotEquityCurve(foo)
Return.cumulative(foo)
clear()
foo
plotEquityCurve(foo)
foo[,1]
foo[,1][2]
nrow(foo)
plotEquityCurve
for(i in 1:nrow(foo)) 
foo$eq[i,] = apply(foo[,1][1:i], 2, Return.cumulative)
foo$eq[i,] = i
foo
for(i in 1:nrow(foo)) foo$eq[i,] = 2
getSymbols('^NDX', from='1900-01-01')
N = dailyReturn(Cl(NDX))
n = N[N > /-03]
n = N[N < -.03]
n = N[N >.03]
nrow(n)
N$next = lag(N, k=-1)
N$next.one = lag(N, k=-1)
n = N[N >.03]
n = N[N[1,] >.03]
n
n = N[N[,1] >.03]
n
head(n)
hist(n$next.one)
nrow(n[n$next.one>0])/nrow(n)
dev.off(
)
N$next.two = lag(N, k=-2)
N$next.three = lag(N, k=-3)
n = N[N[1,] >.03]
n
n = N[N$daily.returns >.03]
n
hist(n$next.two)
nrow(n[n$next.two>0])/nrow(n)
nrow(n[n$next.three>0])/nrow(n)
n = N[N$daily.returns >.025]
nrow(n[n$next.three>0])/nrow(n)
nrow(n[n$next.two>0])/nrow(n)
nrow(n[n$next.one>0])/nrow(n)
N$next.two = lag(N$daily.returns, k=-2)
N$next.three = lag(N$daily.returns, k=-3)
N$next.one = lag(N$daily.returns, k=-1)
n = N[N$daily.returns >.025]
nrow(n[n$next.one>0])/nrow(n)
nrow(n[n$next.two>0])/nrow(n)
nrow(n[n$next.three>0])/nrow(n)
head(n)
head(N)
head(N)
N = N[,-c(3,5,7)]
head(N)
N = N[,-4]
head(N)
n = N[N$daily.returns > .025]
nrow(n)
nrow(n)nrow(N)
nrow(n)/nrow(N)
nrow(n[n$next.one >0])
nrow(n[n$next.one >0]) / nrow(n)
nrow(n[n$next.two >0]) / nrow(n)
nrow(n[n$next.three >0]) / nrow(n)
N$bull = ifelse(SMA(Cl(NDX) , n=50) > (SMA(Cl(NDX), n=200), 1, 0)
N$bull = ifelse(SMA(Cl(NDX) , n=50) > SMA(Cl(NDX), n=200), 1, 0)
nn = N[N$daily.returns > .025 & N$bull ==1 ]
nrow(nn)
nrow(nn[nn$next.three >0]) / nrow(nn)
nrow(nn[nn$next.two >0]) / nrow(nn)
nrow(nn[nn$next.one >0]) / nrow(nn)
dev.off()
ls()
plotEquityCurve(n$next.one
)
plotEquityCurve(n$next.two)
N$next.open = lag(Op(NDX))
head(N)
N$next.open = lag(Op(NDX), k=-1)
head(N)
N$next.close = lag(Cl(NDX), k=-1)
N$returns = (N$next.close - N$next.open)/N$next.open
plotEquityCurve(N$returns)
ls()
head(N)
nrow(N)
n = N[N$daily.returns > .025]
plotEquityCurve(n$returns)
png('buynextdayNDX.png')
plotEquityCurve(n$returns)
dev.off()
dev.off()
system('open buynextdayNDX.png')
getwd()
plotEquityCurve
head(n)
n$eq = NA
for(i in 1:nrow(n)) n$eq[i,] = apply(n[,1][1:i], 2, Return.cumulative)
head(n)
plot(n$eq + 1)
plotEquityCurve
for(i in 1:nrow(n)){ n$eq[i,] = apply(n[,1][1:i], 2, Return.cumulative)}
plotEquityCurve
plot(n$eq + 1)
n$eq = NA
for(i in 1:nrow(n)){ n$eq[i,] = apply(n[,1][1:i], 2, Return.cumulative)}
head(n$eq)
plotEquityCurve
x = n$returns
plotEquityCurve(x)
head(x)
chart_Series(x)
chart_Series(x$eq + 1)
head(x)
class(x)
head(x$eq)
head(n)
equity = n$eq
head(equity)
chart_Series(equity$eq + 1_
chart_Series(equity$eq + 1)
for(i in 1:nrow(n)){ n$eq[i,] = apply(n[,1][1:i], 2, Return.cumulative)}
head(n)
plotEquityCurve
head(x)
x$eq = NA
x$eq[i,] =  apply(x[,1][1:i], 2, Return.cumulative)
head(x)
for(i in 1:nrow(x)) 
x$eq[i,] =  apply(x[,1][1:i], 2, Return.cumulative)
head(x)
plot(x$eq + 1)
names(x) = c('returns','Close')
plot(add_SMA(n=10,col=4,lwd=2))
dev.off()
chart_Series(x$eq+1,theme=theme,name="SPY") 
chart_Series(x$Close,theme=theme,name="foo") 
plot(add_SMA(n=10,col=4,lwd=2))
plot(add_SMA(n=30,col='red',lwd=2))
theme
theme$col$line.col = 'yellow'
chart_Series(x$Close,theme=theme,name="foo") 
theme$col$line.col = 'gray'
chart_Series(x$Close,theme=theme,name="foo") 
plot(add_SMA(n=200,col='red')
plot(add_SMA(n=200,col='red',lwd=2))
plot(add_SMA(n=30,col='red',lwd=2))
plot(add_SMA(n=50,col='red',lwd=2))
chart_Series(x$Close,theme=theme,name="foo") 
plot(add_SMA(n=50,col='red',lwd=1))
plot(add_SMA(n=20,col='blue',lwd=1))
dev.off()
png('nextDayNDX.png')
chart_Series(x$Close,theme=theme,name="Buy Next Day Open & Sell Next Day Close") 
plot(add_SMA(n=20,col='blue',lwd=1))
plot(add_SMA(n=50,col='red',lwd=1))
dev.off()
system('open nextDayNDX.png')
q()
